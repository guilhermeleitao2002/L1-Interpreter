let naturals = fn from: int => {
  from ?: naturals(from + 1)
};

let take = fn n: int, lazyList: list<int> => {
  if (n <= 0) {
    nil
  } else {
    match lazyList {
      nil -> nil
      | head :: tail -> head :: take (n - 1) (tail)
    }
  }
};

let natStream = naturals(1);
let firstFive = take(5) (natStream);

let sum = fn list: list<int> => {
  match list {
    nil -> 0
    | head :: tail -> head + sum(tail)
  }
};

sum(firstFive);;